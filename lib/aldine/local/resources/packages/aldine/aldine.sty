%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Aldine package
%
% Project repository and bug tracker:
% https://github.com/SwagDevOps/aldine
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\ProvidesPackage{aldine}[2023/01/07 v0.1.0 Aldine package]

% packages from CLI commands templates --------------------------------

\RequirePackage{graphicx}
\RequirePackage{hyperref}

% packages used in commands below -------------------------------------

\RequirePackage{shellesc}
\RequirePackage{ifthen}  % provides conditonals...
\RequirePackage{xargs}   % uses a key-value package to define the layout of the optional arguments: \newcommandx{\foo}[3][1=1, 3=n]{...}

% emptypage -----------------------------------------------------------

\newcommandx*{\aldineEmptyPage}[1][1=false] {
  \null
  \thispagestyle{empty}
  \ifthenelse{\equal{\#1}{true}} { \addtocounter{page}{-1} } {}
  \newpage
}

% commands ------------------------------------------------------------

\newcommand*{\aldineMarkdown}[1] {
  % todo provide a command from aldine CLI commands
  \ShellEscape{pandoc -t latex -o #1.markdown.tex #1.md}
  \input{#1.markdown}
}

% aldine --------------------------------------------------------------

\newcommandx*{\aldineSvgConv}[1] {
  \ShellEscape{aldine svg-conv #1}
}

\newcommandx*{\aldineLorem}[2][2=,usedefault] {
  \ShellEscape{aldine '#1' sample --override='#2'}
  \input{#1.erb-sample}
}

\newcommandx*{\aldineBlason}[2][2=,usedefault] {
  \ShellEscape{aldine miniature --floating '#1' --override='#2'}
  \input{#1.erb-miniature}
}

\newcommandx*{\aldineChapters}[2][2=,usedefault] {
  \ShellEscape{aldine chapters '#1' --override='#2'}
  \input{#1.erb-chapters}
}

\newcommandx*{\aldineHyperrefSetup}[2][2=,usedefault] {
  \ShellEscape{aldine hyperref-setup '#1' --override='#2'}
  \input{#1.erb-hyperref_setup}
}

\newcommandx*{\aldineImageFull}[2][2=,usedefault] {
  \ShellEscape{aldine image-full '#1' --override='#2'}
  \input{#1.erb-image_full}
}
